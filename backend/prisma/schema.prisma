// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User management for Case Management System
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String   // bcrypt hashed
  role      UserRole
  firstName String
  lastName  String
  isActive  Boolean  @default(true)
  
  // Audit fields
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime?
  
  // Relationships
  createdCases  Case[]          @relation("CaseCreator")
  assignedCases Case[]          @relation("CaseAssignee")
  caseLogs      Case_Log[]
  uploadedDocs  Case_Document[]

  @@map("users")
}

// Case management core entity
model Case {
  id          String     @id @default(uuid())
  title       String
  description String
  status      CaseStatus @default(NEW)
  priority    Priority   @default(MEDIUM)
  createdBy   String
  assignedTo  String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // Relationships
  creator   User            @relation("CaseCreator", fields: [createdBy], references: [id])
  assignee  User?           @relation("CaseAssignee", fields: [assignedTo], references: [id])
  logs      Case_Log[]
  documents Case_Document[]

  // Indexes for performance
  @@index([status])
  @@index([createdBy])
  @@index([assignedTo])
  @@index([createdAt])
  @@index([status, createdAt])
  @@index([assignedTo, status])
  @@map("cases")
}

// Audit log for all case activities
model Case_Log {
  id        String   @id @default(uuid())
  caseId    String
  userId    String
  action    String   // "created", "assigned", "status_changed", "commented"
  details   Json?    // Flexible JSON for additional context
  timestamp DateTime @default(now())
  
  // Relationships
  case Case @relation(fields: [caseId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id])

  // Indexes for audit queries
  @@index([caseId])
  @@index([userId])
  @@index([timestamp])
  @@index([caseId, timestamp])
  @@map("case_logs")
}

// Case document management
model Case_Document {
  id         String   @id @default(uuid())
  caseId     String
  filename   String
  s3Key      String   @unique
  mimeType   String
  fileSize   Int
  uploadedBy String
  uploadedAt DateTime @default(now())
  
  // Relationships
  case     Case @relation(fields: [caseId], references: [id], onDelete: Cascade)
  uploader User @relation(fields: [uploadedBy], references: [id])

  @@index([caseId])
  @@map("case_documents")
}

// Enums
enum UserRole {
  CLERK
  CHAIR
  CASEWORKER
}

enum CaseStatus {
  NEW
  PENDING_REVIEW
  ASSIGNED
  IN_PROGRESS
  PENDING_COMPLETION
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

