version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: case_management_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: case_management_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U case_user -d case_management_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 可选：添加 pgAdmin 用于数据库管理
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: case_management_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  # MinIO 对象存储服务 (本地模拟 S3)
  minio:
    image: minio/minio:latest
    container_name: case_management_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"    # API端口
      - "9001:9001"    # 控制台端口
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
  pgadmin_data:
  minio_data: